body{
    padding:0;
    margin: 0;
    position:relative;
}

.fond-image{
    background: linear-gradient(rgba(5, 7, 12, 0.50), 
    rgba(5, 7, 12, 0.50)), url("/static/img/fondImage.jpg"); 
    background-size: cover; 
    background-repeat: no-repeat; 
    background-position: center center; 
    min-height: 100%;
    min-width: 100%;
    position: absolute;
    z-index: -1; 
}

.grid-container{
    display:grid;
    height:100vh;
    grid-template-columns: repeat(auto-fit, minmax(auto, 80vw));
    grid-template-areas: 'header'
                        'form'
                        'tasks';
    justify-content: center;
    overflow: auto;
}

.grid-container > .header, .form{
    display: flex;
    flex-direction: column;
    justify-content:center;
    align-items: center;
    padding: 5px;
    font-family: 'Architects Daughter', cursive;
    font-size: 20px;
    font-weight: bold;
    text-align: center;
    color: #03C4A1;

}

.table-tasks {
    margin-bottom: 10px;
    width: 100%;
    overflow: auto;
}

table, th, td {
    border: 1.5px solid;
    border-collapse: collapse;
    border-color: #162447;
    border-color: #F9D276;
    word-wrap:break-word;
    table-layout: fixed;
}

th{
    font-family: 'Montserrat', sans-serif;
    position: sticky;
    top: 0;
    font-size: 23px;
    padding: 10px;
    color: white;
    background-color: #7D1935;
}

td{
    font-family: 'Montserrat', sans-serif;
    font-size: 18px;
    font-weight: bold;
    color: #26001B;
}


tr > .comentaries, .images {
    text-align: center;
}

.edit, .delete {
    max-width: 28px;
    max-height: 28px;
}

/* Size the colums table */
.name-task {width: 35%;}
.comentaries {width: 55%;}
.images {width: 10%;}
/* -----------------------------------  */

/* when hover to tr element get td but only td without .set-important-color class, so the background and color is not
apply to the elements that has .set-important-color class (we add this class to the labels tag when we double click on tbody) */
tr:hover td:not(.set-important-color) {
    background: rgba(62, 73, 122, 0.3);
    color: white;
}

.header{grid-area: header; height: 80px;}
.form{grid-area: form;}
.table-tasks{grid-area: tasks}


.grid-container > form > input {
    font-family: 'Space Mono', monospace;
    font-size: 16px;
    margin: 5px;
    width: 100%;
    height: 40px;
    text-align: center;
}

.grid-container > form > textarea{
    font-family: 'Space Mono', monospace;
    font-size: 16px;
    margin: 10px;
    width: 100%;
    height: 80px;
    text-align: center;
}

textarea::placeholder {
    line-height: 80px;
}

textarea:focus::placeholder {
    color: transparent;
}

input[type="text"]:focus::placeholder {
    color: transparent;
}

input[type="checkbox"]{
    width:20px;
    height:20px;
}


button{
    font-family: 'Space Mono', monospace;
    font-size: 16px;
    font-weight: bold;
    width:258px;
    height:45px;
    background-color:#064663;
    color:white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: 0.3s ease all;
    position: relative;
    overflow: hidden;
    margin-bottom: 20px;
    transition: 0.3s ease all;
}

button:active{
    transform: scale(0.3);
}

/* Remember after is a soon of the element in this case soon of the button for that reason button has position relative and after has position abosulute and so we can say with / height 100% of his fater (button)*/
button::after{
    content: "";
    width: 100%;
    position: absolute;
    z-index: 1;
    top: 0;
    transition: 0.3s ease-in-out all;
    border-bottom: 60px solid #DA0037;
    border-right: 30px solid transparent;
    left: calc(-100% - 30px); /* -30px because the border right has 30px so for avoid this border enter to the element */

}

/* Our span tag contains the text of the boton so for get put it above after element we set it to
z-index:2 and our after with z-index:1*/
button span{
    position: relative;
    z-index: 2;
}

button:hover::after{
    left: 0;
}

/*---Set color to the class element set-important-color ---------------*/
.set-important-color{
    color: #FFF600;
}

/* For initially hide header, form and table, later we show these elements using javaScript */
.hide{
    display: none;
}

/* ------------------------Animation blink used when we add a new task--------------------------------*/
.blink{
    animation: blinker 0.3s linear;
    animation-iteration-count: 3;
}

@keyframes blinker {
    from{background-color: transparent;}
    to{background-color:#293462}
}
/* -----------------------------------------------------------------------------------------------*/


/* ----------Defining media querys settings ---------------------------------------------------- */

@media screen and (max-width: 700px) {
    .header > h1{
        font-size: 26px;
    }

    .grid-container > form > input{
        font-size: 14px;
        width: 90%;
        height: 25px;
    }

    button{
        font-size: 14px;
        height: 35px;
    }

    th{
        font-size: 16px;
    }

    td{
        font-size: 14px;
    }

    input[type="checkbox"]{
        width:16px;
        height:16px;
    }

    .edit, .delete {
        max-width: 25px;
        max-height: 25px;
    }

    .grid-container{
        grid-template-columns: repeat(auto-fit, minmax(auto, 95vw));
    }
}

@media screen and (max-width: 1000px) {

    .grid-container{
        grid-template-columns: repeat(auto-fit, minmax(auto, 95vw));
    }
}

/* ------------------------------------------------------------------------------------------- */
